<?php

namespace app\index\controller;
use app\common\model\OrderGoods;
use app\wechat\controller\WechatPay;
use think\Exception;
use think\facade\Request;
use think\facade\Session;
use think\facade\View;
use app\common\model\UserAddress;
use app\common\model\AccountLog;
class Order extends Common{

    public $address = [];
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub

        $uid = $this->isLogin();
        if(!$uid){
            $this->redirect(url('login/index'));
        }
        $this->address = UserAddress::where('user_id',$uid)->select();
    }

    //订单页面
    public function index(){
        if(Request::get('type')=='cart'){

            $cart = \app\common\model\Cart::where('selected',1)->select()->toArray();

        }elseif(Request::get('type')=='buyNow'){
            $goods_id =Request::get('goods_id');
            $goods_num =Request::get('goods_num');
            $goods = \app\common\model\Goods::getOne($goods_id);
            if(!$goods){
                $this->redirect('/');
            }
            $goods = $goods->toArray();
            $goods['goods_num'] = $goods_num;
            $cart[] =   $goods;
        }
        if(!$cart){
            $this->redirect(url('cart/index'));
        }
//        、获取商品数量和商品总价格
        list($goods_num,$goods_money) = \app\common\model\Order::get_order_money_num($cart);
        //获取运费
        $shipping_price = 0;
        $default_addr = UserAddress::get_default_address();
        if($default_addr){
            $w = \app\common\model\Order::get_weight($cart);
            $p = $this->get_reg_name_by_id($default_addr['province']);
            $shipping_price = get_shipping_price($w,$p);
            $shipping_price = 0;
        }
        $order = ['goods_num'=>$goods_num,'goods_money'=>$goods_money,'shipping_price'=>$shipping_price];
        View::assign('cart',$cart);
        View::assign('order',$order);
        View::assign('address',$this->address);
        View::assign('type',Request::get('type'));

        return View::fetch();
    }


    //确认订单
    public function confirm(){
        $id = Request::get('id');
        $order = \app\common\model\Order::find($id);
        $countdown = strtotime($order->create_time) +7200 - time();
        View::assign('order_id',$id);
        View::assign('order',$order);
        View::assign('countdown',$countdown);
        return View::fetch();
    }

//生成订单；
    public function addOrder(){
        $cart = Request::post('cart');
        $addr_id = Request::post('address_id');
        $shipping_price = Request::post('shipping_price');
        $goods_money = Request::post('goods_money');

        $data = Request::post();
        try{
            $res = \app\common\model\Order::checkorder($data);
            $this->success('提交订单成功','',$res->order_id);

        }catch (Exception $e){
            $this->error($e->getMessage()) ;
        }

    }
    //微信支付页面
    public function wxpay(){
        $id =  Request::post('id');
        $order = \app\common\model\Order::find($id)->toArray();
        $goods = OrderGoods::where('order_id',$id)->find();
        $goods_name = $goods->goods_name;
        $wechat = new WechatPay();
        $order['goods_name'] = $goods_name;
        // 创建 Paylog 记录
        try{
            $data = cache('wx_pay_qr'.$order['order_id']);
            if(!$data){
                $data  = $wechat->order($order);
               cache('wx_pay_qr'.$order['order_id'],$data,['expire'=>7200]);

            }
            if(!AccountLog::where('order_sn',$data['out_trade_no'])->find()){
                AccountLog::create([
                    'user_id' =>Session::get('uid'),
                    'order_sn' => $data['out_trade_no'],
                    'change_time' => time(),
                    'order_id' => $id
                ]);
            }

           $this->success('','',$data);
        }catch (Exception $e){
            $this->error($e->getMessage());
        }
    }


    //查询订单；
    public function queryOrder($order_sn){

        $order_sn = Request::post('order_sn');
        $wechat = new WechatPay();
        $order = $wechat->queryOrder($order_sn);
        if ($order['trade_state'] === 'SUCCESS'){
            $this->success('支付成功');
        }else{
            $this->error('未支付');
        }

    }

}